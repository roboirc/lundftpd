##---------------------------------------------------------------------------##
## EYOT CONFiG FiLE ###########################################################
##---------------------------------------------------------------------------##
##                                                                           ##
## This config file specifies the behaviour of the EYOT bot.  At the very    ##
## least you must have a nick, name, port, passwd, server and a channel.     ##
##---------------------------------------------------------------------------##

##---------------------------------------------------------------------------##
## FTP Comms Settings #########################################################
##---------------------------------------------------------------------------##
##                                                               [MANDATORY] ##
## Define incoming FTP server ports to listen on. You can definite multiple  ##
## Server here, and re-direct them to different places.                      ##
##---------------------------------------------------------------------------##

ftpserver {
	name = "local_test";
	port = 2123;
	passwd = "feedcat2day";
#If you want eyot to talk to the remote server, also define:
#	ip = "ip.ip.ip.ip":
#	remote_port = 9898;
};





##---------------------------------------------------------------------------##
## IRC SeTTINGS ###############################################################
##---------------------------------------------------------------------------##
## NICK (STRING)                                                 [MANDATORY] ##
## Set the nick of the bot.                                                  ##
## NAME (STRING)                                                 [MANDATORY] ##
## Set the IRCNAME of the bot (shows up in /whois)                           ##
## OWNER (STRING)                                                 [OPTIONAL] ##
## A hostmask of the owner of the bot in IRC in the form of:                 ##
##     <NICK>!<USERID>@<HOSTNAME>                                            ##
## SERVER (BLOCK)                                                [MANDATORY] ##
## Configuration for adding a server to the bot.                             ##
##  - IP     : the ip or hostname of the server to connect to.               ##
##  - PORT   : the port the server is listening on.                          ##
##  - SSL    : Yes or No to use SSL to connect to the server.                ##
##  - MODE   : Initial usermode to set on the bot when connecting.           ##
##  - PASSWD : Password for the server if required.                          ##
ircserver {
	ip = "127.0.0.1";
	name = "local_ircd";
	port = 6510;
	ssl = yes;
	mode = "+i";
#	passwd = "";
	nick = "wookiee";
	user = "uwaaragghghgagag";
	owner = "*!*wookiee@*.drunkmonk.net";

	channel {
		name = "#bots";
		ftpserver = "local_test";
		announce = "user-announce";
		#key = "channelkey";
		#invite = "user";
		#fish="theFisHKeyHere";
	};

};





##---------------------------------------------------------------------------##
## Announce Formats ###########################################################
##---------------------------------------------------------------------------##
## Announcements can be setup with an empty format in which case incoming    ##
## messages from the FTP server of that type will be ignored.                ##
##                                                                           ##
## A special section called DEFAULT will be used for any sections that do    ##
## not match anywhere else.  Also, the following EVENT types can be          ##
## specified in the DEFAULT section, those are:                              ##
##  - START       : Message when the server starts up.                       ##
##  - STOP        : Message when the server is shutdown.                     ##
##                  - %msg%    : contains a reason for the shutdown.         ##
##  - WALL        : Someone has done a new SITE WALL.                        ##
##                  - %user%   : user leaving the message.                   ##
##                  - %msg%    : the message.                                ##
##                                                                           ##
## The following events work on a per section basis and ALL have the field   ##
## %section% available for use.                                              ##
##  - MKD         : New directory.  Fields: dir, user.                       ##
##  - RMD         : Directory removed.  Fields: dir, user.                   ##
##  - SFV         : SFV received.  Fields: dir, user, count, fname.          ##
##  - COMPLETE    : Release completed.  Fields: dir, user.                   ##
##  - NUKE        : Nuked rls.  Fields: nuker, dir, reason, multiplier       ##
##  - NUKEE       : Nuked user.  Fields: user, group, credits, files, mbytes ##
##  - UNNUKE      : UnNuked rls.  Fields: nuker, dir, reason, multiplier     ##
##  - UNNUKEE     : UnNuked user. Fields: user, group, credits, files, mbytes #
##  - MP3GENRE    : MP3 info for a relase. Fields: dir, year, genre.         ##
##  - IMDB        : IMDb URL if found in .nfo or .url.                       ##
##  - RACERSTART  : Someone starts a new race.  Fields: dir, user,           ##
##                  group, speed (in KB).                                    ##
##  - RACERNEW    : Someone challenges on a race.  Fields: dir, user, group, ##
##                  speed (in KB).                                           ##
##  - RACEHALF    : Race is halfway through.  Fields: dir, half (files done) ##
##                  files (total for rls), racercnt (num of racers), mins,   ##
##                  secs.                                                    ##
##  - RACEEND     : Race is over!  Fields: dir, racecnt (racers), hours,     ##
##                  mins, seconds.                                           ##
##  - RACEREND    : A line per racer who competed in a race.   Fields: rank, ##
##                  user, grou, files, total (total files of rls),           ##
##                  speed (in KB/sec), megs (user sent), percent,            ##
##                  time (as an HHMMSS string).                              ##
##---------------------------------------------------------------------------##

## ANNOUNCE (BLOCK)                                              [MANDATORY] ##
## Specify a block of announcements for a particular section.                ##
##  - SECTION   : The section this msg belongs to.                           ##
##  - CHANNEL   : The channel to announce messages for this section on.      ##
##  - EVENT     : An event to handle for this section as follows:            ##
##                - TYPE     : The type of event (see above).                ##
##                - FORMAT   : A format string containing fields for the     ##
##                             event type between %'s.  EG %msg% to replace  ##
##                             with the 'msg' field from the daemon.         ##
announce {

	section = "DEFAULT";
	name = "user-announce";

	# This next one is probably obsolete.
	channel = "#bots";

	event {
		type = "START";
		format = "Startup: Server is now online.";
	};
	event {
		type = "STOP";
		format = "Shutdown: %msg%";
	};
	event {
		type = "WALL";
		format = "Wall: <%user%> %msg%";
	};
	
	event {
		type = "MKD";
		format = "[%section%] New Release: <%user%> %dir%";
	};
	event {
		type = "RMD";
		format = "[%section%] Deleted Release: <%user%> %dir%";
	};

	event {
		type = "SFV";
		format = "[%section%] New SFV File: <%user%> %dir% - %count% files";
	};

	event {
		type = "COMPLETE";
		format = "[%section%] Completed: <%user%> %dir%";
	};

	event {
		type = "NUKE";
		format = "[%section%s] Nuke: %nuker% on %dir% at x%multiplier% for: %reason%";
	};

	event {
		type = "NUKEE";
		format = "[%section%] -> %user% of %group% loses %credits%MB (%files%f %mbytes%mb)";
    };

	event {
		type = "UNNUKE";
		format = "[%section%s] UnNuke: %nuker% on %dir% at x%multiplier% for: %reason%";
    };

	event {
		type = "UNNUKEE";
		format = "[%section%] -> %user% of %group% gains %credits%MB (%files%f %mbytes%mb)";
    };

	event {
		type = "RACEHALF";
		format = "[%section%] Race Halfway: %dir% %half%/%files% files by %racercnt% racer(s) in %mins%m%secs%s. %user%@%group% leads!";
	};

	event {
		type = "RACERSTART";
		format = "[%section%] New Racer: <%user%@%group%> begins %dir% at %speed%KB/sec";
	};

	event {
		type = "RACEEND";
		format = "[%section%] Completed: %dir% by %racecnt% racer(s) in %hours%h%min%m%sec%s";
	};

	event {
		type = "RACEREND";
		format = "[%section%]     [%rank%] %user%@%group% %files%/%total% %speed%KB/sec %megs%MB %percent%%% %time%";
	};

	event {
		type = "RACERNEW";
		format = "[%section%] New Racer: <%user%@%group%> challenges [ %racers% ] on %dir% at %speed%KB/sec";
	};

	event {
		type = "MP3GENRE";
		format = "[%section%] MP3 Genre: <%year%-%genre%> %dir%";
	};

	event {
		type = "IMDB";
		format = "[%section%] IMDb: %url% for %dir%";
	};

	event {
		type = "MOVE";
		format = "[%section%] Move: %user% moves in %dir%";
	};

	event {
		type = "NEWDAY";
		format = "New Day: We saw %gbup% GB uploaded in %fup% files during %sup% seconds.  %gbdn% GB downloaded in %fdn% files during %sdn% seconds.";
	};

	event {
		type = "CPS";
		format = "KB/s: %USER% Up: %UP%     Down: %DOWN%    Total: %TOTAL%";
	};

	event {
		type = "FILLED";
		format = "[%section%] %user% completes request %dir%";
	};


};

